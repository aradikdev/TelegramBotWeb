// <auto-generated />
using System;
using DevSpaceWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevSpaceWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230527062829_Init4")]
    partial class Init4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevSpaceWeb.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOur")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatId = 1,
                            IsOur = true,
                            MessageDate = new DateTime(2023, 5, 27, 12, 28, 29, 916, DateTimeKind.Local).AddTicks(8593),
                            MessageText = "Hi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ChatId = 1,
                            IsOur = false,
                            MessageDate = new DateTime(2023, 5, 27, 12, 29, 29, 916, DateTimeKind.Local).AddTicks(8606),
                            MessageText = "Hello",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ChatId = 1,
                            IsOur = true,
                            MessageDate = new DateTime(2023, 5, 27, 12, 30, 29, 916, DateTimeKind.Local).AddTicks(8612),
                            MessageText = "How are you?",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ChatId = 1,
                            IsOur = false,
                            MessageDate = new DateTime(2023, 5, 27, 12, 31, 29, 916, DateTimeKind.Local).AddTicks(8613),
                            MessageText = "I'm good, thanks!",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ChatId = 1,
                            IsOur = true,
                            MessageDate = new DateTime(2023, 5, 27, 12, 32, 29, 916, DateTimeKind.Local).AddTicks(8615),
                            MessageText = "What have you been up to?",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            ChatId = 1,
                            IsOur = false,
                            MessageDate = new DateTime(2023, 5, 27, 12, 33, 29, 916, DateTimeKind.Local).AddTicks(8616),
                            MessageText = "Not much, just working on a project",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DevSpaceWeb.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMessage")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Alice"
                        });
                });

            modelBuilder.Entity("DevSpaceWeb.Models.Message", b =>
                {
                    b.HasOne("DevSpaceWeb.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DevSpaceWeb.Models.User", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
